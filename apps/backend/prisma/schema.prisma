// Endere√ßo: apps/backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DOCTOR
  PATIENT
  ADMIN
}

enum Sex {
  MALE
  FEMALE
  OTHER
}

model Address {
  id              Int            @id @default(autoincrement())
  street          String
  number          String
  complement      String?
  neighborhood    String
  city            String
  state           String
  zipCode         String
  doctorProfiles  DoctorProfile[]
  patientProfiles PatientProfile[]
}

model User {
  id                   Int                   @id @default(autoincrement())
  email                String                @unique
  phone                String?               @unique
  password             String
  role                 Role
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  passwordResetToken   String?               @unique
  passwordResetExpires DateTime?
  doctorProfile        DoctorProfile?
  patientProfile       PatientProfile?
  issuedCertificates   MedicalCertificate[]  @relation("DoctorCertificates")
  receivedCertificates MedicalCertificate[]  @relation("PatientCertificates")
}

model DoctorProfile {
  id        Int      @id @default(autoincrement())
  name      String
  crm       String   @unique
  specialty String?
  address   Address? @relation(fields: [addressId], references: [id])
  addressId Int?     @unique
  phone     String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model PatientProfile {
  id          Int      @id @default(autoincrement())
  name        String
  cpf         String   @unique
  dateOfBirth DateTime
  sex         Sex?
  phone       String?
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  address     Address? @relation(fields: [addressId], references: [id])
  addressId   Int?     @unique
}

model MedicalCertificate {
  id             Int       @id @default(autoincrement())
  issueDate      DateTime  @default(now())
  templateId     String    @default("default")
  purpose        String
  startDate      DateTime?
  durationInDays Int?
  cidCode        String?
  cidDescription String?
  observations   String?
  pdfUrl         String?
  doctor         User      @relation("DoctorCertificates", fields: [doctorId], references: [id])
  doctorId       Int
  patient        User      @relation("PatientCertificates", fields: [patientId], references: [id])
  patientId      Int
}

model CidCode {
  id          Int    @id @default(autoincrement())
  code        String @unique
  description String

  @@index([code])
}