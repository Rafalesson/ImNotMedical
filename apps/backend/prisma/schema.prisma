// prisma/schema.prisma 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tabela focada apenas em autenticação e papel
model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  role      String    // "DOCTOR" ou "PATIENT"
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relações um-para-um com os perfis
  doctorProfile  DoctorProfile?
  patientProfile PatientProfile?
  
  // Relações um-para-muitos com os documentos
  issuedCertificates   MedicalCertificate[] @relation("DoctorCertificates")
  receivedCertificates MedicalCertificate[] @relation("PatientCertificates")
}

// --- NOVAS TABELAS DE PERFIL ---

model DoctorProfile {
  id        String @id @default(cuid())
  name      String
  crm       String @unique
  specialty String? 
  address   String? 
  phone     String? 

  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique
}

model PatientProfile {
  id          String   @id @default(cuid())
  name        String
  cpf         String   @unique
  dateOfBirth DateTime
  sex         String? 

  user        User   @relation(fields: [userId], references: [id])
  userId      String @unique
}


// Tabela de atestados atualizada para usar a relação com User
model MedicalCertificate {
  id               String    @id @default(cuid())
  issueDate        DateTime  @default(now())
  purpose          String
  startDate        DateTime?
  durationInDays   Int?
  cidCode          String?
  cidDescription   String?
  observations     String?
  pdfUrl           String?

  // Relação com o médico (User) que emitiu
  doctor           User      @relation("DoctorCertificates", fields: [doctorId], references: [id])
  doctorId         String

  // Relação com o paciente (User) que recebeu
  patient          User      @relation("PatientCertificates", fields: [patientId], references: [id])
  patientId        String
}

model CidCode {
  id          String @id @default(cuid())
  code        String @unique // Ex: "A09"
  description String

  @@index([code]) // Adiciona um índice na coluna 'code' para buscas mais rápidas
}